@Library('git_utils') _

properties([
    parameters([
        string(name: 'REPO_URL', defaultValue: 'https://github.com/user/repo.git', description: 'Git repo URL'),
        string(name: 'BRANCH', defaultValue: 'main', description: 'Branch to analyze'),
        string(name: 'SINCE_DATE', defaultValue: '1 week ago', description: 'Period (e.g., "2023-01-01" or "2 weeks ago")'),
        choice(name: 'OUTPUT_FORMAT', choices: ['JSON', 'YAML', 'TEXT'], description: 'Output format')
    ])
])

pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                script {
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: params.BRANCH]],
                        userRemoteConfigs: [[url: params.REPO_URL, credentialsId: 'git_key']]
                    ])
                }
            }
        }

        stage('Get Git Log') {
            steps {
                script {
                    def rawLog = sh(
                        script: "git log --since='${params.SINCE_DATE}' --pretty=format:'%h | %an | %ad | %s' --date=short",
                        returnStdout: true
                    ).trim()

                    if (!rawLog) {
                        currentBuild.result = 'UNSTABLE'
                        error("No commits found since ${params.SINCE_DATE}")
                    }

                    def report = gitParser(
                        rawLog: rawLog,
                        format: params.OUTPUT_FORMAT
                    )
                    writeFile file: "report.${params.OUTPUT_FORMAT.toLowerCase()}", text: report
                }
            }
        }
    }

    post {
        success {
            echo "‚úÖ –ë–∏–ª–¥ —É—Å–ø–µ—à–µ–Ω! –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã."
            archiveArtifacts artifacts: "report.${params.OUTPUT_FORMAT.toLowerCase()}"
        }
        unstable {
            echo "‚ö†Ô∏è –ë–∏–ª–¥ –Ω–µ—Å—Ç–∞–±–∏–ª–µ–Ω: ${currentBuild.currentResult}"
            emailext (
                subject: "Jenkins Build UNSTABLE: ${env.JOB_NAME}",
                body: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–≤–µ—Ç–∫–∞, –¥–∞—Ç–∞). –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: ${env.BUILD_URL}",
                to: 'dev@example.com'
            )
        }
        failure {
            echo "‚ùå –ë–∏–ª–¥ —É–ø–∞–ª: ${currentBuild.currentResult}"
            slackSend channel: '#alerts', message: "FAILED: ${env.JOB_NAME} (${env.BUILD_URL})"
        }
        aborted {
            echo "üö´ –ë–∏–ª–¥ –æ—Ç–º–µ–Ω–µ–Ω –≤—Ä—É—á–Ω—É—é"
        }
        always {
            echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
            deleteDir()  // –£–¥–∞–ª—è–µ–º workspace (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        }
    }
}